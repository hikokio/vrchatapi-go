/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
)

// UpdateInviteMessageRequest struct for UpdateInviteMessageRequest
type UpdateInviteMessageRequest struct {
	Message string `json:"message"`
}

// NewUpdateInviteMessageRequest instantiates a new UpdateInviteMessageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInviteMessageRequest(message string) *UpdateInviteMessageRequest {
	this := UpdateInviteMessageRequest{}
	this.Message = message
	return &this
}

// NewUpdateInviteMessageRequestWithDefaults instantiates a new UpdateInviteMessageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInviteMessageRequestWithDefaults() *UpdateInviteMessageRequest {
	this := UpdateInviteMessageRequest{}
	return &this
}

// GetMessage returns the Message field value
func (o *UpdateInviteMessageRequest) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *UpdateInviteMessageRequest) GetMessageOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *UpdateInviteMessageRequest) SetMessage(v string) {
	o.Message = v
}

func (o UpdateInviteMessageRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateInviteMessageRequest struct {
	value *UpdateInviteMessageRequest
	isSet bool
}

func (v NullableUpdateInviteMessageRequest) Get() *UpdateInviteMessageRequest {
	return v.value
}

func (v *NullableUpdateInviteMessageRequest) Set(val *UpdateInviteMessageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInviteMessageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInviteMessageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInviteMessageRequest(val *UpdateInviteMessageRequest) *NullableUpdateInviteMessageRequest {
	return &NullableUpdateInviteMessageRequest{value: val, isSet: true}
}

func (v NullableUpdateInviteMessageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInviteMessageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


