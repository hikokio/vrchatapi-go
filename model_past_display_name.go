/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
	"time"
)

// PastDisplayName struct for PastDisplayName
type PastDisplayName struct {
	DisplayName string `json:"displayName"`
	UpdatedAt time.Time `json:"updated_at"`
}

// NewPastDisplayName instantiates a new PastDisplayName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPastDisplayName(displayName string, updatedAt time.Time) *PastDisplayName {
	this := PastDisplayName{}
	this.DisplayName = displayName
	this.UpdatedAt = updatedAt
	return &this
}

// NewPastDisplayNameWithDefaults instantiates a new PastDisplayName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPastDisplayNameWithDefaults() *PastDisplayName {
	this := PastDisplayName{}
	return &this
}

// GetDisplayName returns the DisplayName field value
func (o *PastDisplayName) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *PastDisplayName) GetDisplayNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *PastDisplayName) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PastDisplayName) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PastDisplayName) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PastDisplayName) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o PastDisplayName) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["displayName"] = o.DisplayName
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullablePastDisplayName struct {
	value *PastDisplayName
	isSet bool
}

func (v NullablePastDisplayName) Get() *PastDisplayName {
	return v.value
}

func (v *NullablePastDisplayName) Set(val *PastDisplayName) {
	v.value = val
	v.isSet = true
}

func (v NullablePastDisplayName) IsSet() bool {
	return v.isSet
}

func (v *NullablePastDisplayName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePastDisplayName(val *PastDisplayName) *NullablePastDisplayName {
	return &NullablePastDisplayName{value: val, isSet: true}
}

func (v NullablePastDisplayName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePastDisplayName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


