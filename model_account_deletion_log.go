/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
	"time"
)

// AccountDeletionLog struct for AccountDeletionLog
type AccountDeletionLog struct {
	// Typically \"Deletion requested\" or \"Deletion canceled\". Other messages like \"Deletion completed\" may exist, but are these are not possible to see as a regular user.
	Message *string `json:"message,omitempty"`
	// When the deletion is scheduled to happen, standard is 14 days after the request.
	DeletionScheduled NullableTime `json:"deletionScheduled,omitempty"`
	// Date and time of the deletion request.
	DateTime *time.Time `json:"dateTime,omitempty"`
}

// NewAccountDeletionLog instantiates a new AccountDeletionLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountDeletionLog() *AccountDeletionLog {
	this := AccountDeletionLog{}
	var message string = "Deletion requested"
	this.Message = &message
	return &this
}

// NewAccountDeletionLogWithDefaults instantiates a new AccountDeletionLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountDeletionLogWithDefaults() *AccountDeletionLog {
	this := AccountDeletionLog{}
	var message string = "Deletion requested"
	this.Message = &message
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *AccountDeletionLog) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDeletionLog) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
    return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *AccountDeletionLog) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *AccountDeletionLog) SetMessage(v string) {
	o.Message = &v
}

// GetDeletionScheduled returns the DeletionScheduled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountDeletionLog) GetDeletionScheduled() time.Time {
	if o == nil || isNil(o.DeletionScheduled.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DeletionScheduled.Get()
}

// GetDeletionScheduledOk returns a tuple with the DeletionScheduled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountDeletionLog) GetDeletionScheduledOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.DeletionScheduled.Get(), o.DeletionScheduled.IsSet()
}

// HasDeletionScheduled returns a boolean if a field has been set.
func (o *AccountDeletionLog) HasDeletionScheduled() bool {
	if o != nil && o.DeletionScheduled.IsSet() {
		return true
	}

	return false
}

// SetDeletionScheduled gets a reference to the given NullableTime and assigns it to the DeletionScheduled field.
func (o *AccountDeletionLog) SetDeletionScheduled(v time.Time) {
	o.DeletionScheduled.Set(&v)
}
// SetDeletionScheduledNil sets the value for DeletionScheduled to be an explicit nil
func (o *AccountDeletionLog) SetDeletionScheduledNil() {
	o.DeletionScheduled.Set(nil)
}

// UnsetDeletionScheduled ensures that no value is present for DeletionScheduled, not even an explicit nil
func (o *AccountDeletionLog) UnsetDeletionScheduled() {
	o.DeletionScheduled.Unset()
}

// GetDateTime returns the DateTime field value if set, zero value otherwise.
func (o *AccountDeletionLog) GetDateTime() time.Time {
	if o == nil || isNil(o.DateTime) {
		var ret time.Time
		return ret
	}
	return *o.DateTime
}

// GetDateTimeOk returns a tuple with the DateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDeletionLog) GetDateTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.DateTime) {
    return nil, false
	}
	return o.DateTime, true
}

// HasDateTime returns a boolean if a field has been set.
func (o *AccountDeletionLog) HasDateTime() bool {
	if o != nil && !isNil(o.DateTime) {
		return true
	}

	return false
}

// SetDateTime gets a reference to the given time.Time and assigns it to the DateTime field.
func (o *AccountDeletionLog) SetDateTime(v time.Time) {
	o.DateTime = &v
}

func (o AccountDeletionLog) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if o.DeletionScheduled.IsSet() {
		toSerialize["deletionScheduled"] = o.DeletionScheduled.Get()
	}
	if !isNil(o.DateTime) {
		toSerialize["dateTime"] = o.DateTime
	}
	return json.Marshal(toSerialize)
}

type NullableAccountDeletionLog struct {
	value *AccountDeletionLog
	isSet bool
}

func (v NullableAccountDeletionLog) Get() *AccountDeletionLog {
	return v.value
}

func (v *NullableAccountDeletionLog) Set(val *AccountDeletionLog) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountDeletionLog) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountDeletionLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountDeletionLog(val *AccountDeletionLog) *NullableAccountDeletionLog {
	return &NullableAccountDeletionLog{value: val, isSet: true}
}

func (v NullableAccountDeletionLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountDeletionLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


