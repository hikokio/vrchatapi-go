/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
)

// WorldMetadata struct for WorldMetadata
type WorldMetadata struct {
	// WorldID be \"offline\" on User profiles if you are not friends with that user.
	Id string `json:"id"`
	Metadata map[string]interface{} `json:"metadata"`
}

// NewWorldMetadata instantiates a new WorldMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorldMetadata(id string, metadata map[string]interface{}) *WorldMetadata {
	this := WorldMetadata{}
	this.Id = id
	this.Metadata = metadata
	return &this
}

// NewWorldMetadataWithDefaults instantiates a new WorldMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorldMetadataWithDefaults() *WorldMetadata {
	this := WorldMetadata{}
	return &this
}

// GetId returns the Id field value
func (o *WorldMetadata) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WorldMetadata) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WorldMetadata) SetId(v string) {
	o.Id = v
}

// GetMetadata returns the Metadata field value
func (o *WorldMetadata) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *WorldMetadata) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// SetMetadata sets field value
func (o *WorldMetadata) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o WorldMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableWorldMetadata struct {
	value *WorldMetadata
	isSet bool
}

func (v NullableWorldMetadata) Get() *WorldMetadata {
	return v.value
}

func (v *NullableWorldMetadata) Set(val *WorldMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableWorldMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableWorldMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorldMetadata(val *WorldMetadata) *NullableWorldMetadata {
	return &NullableWorldMetadata{value: val, isSet: true}
}

func (v NullableWorldMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorldMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


