/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
)

// CreateGroupAnnouncementRequest struct for CreateGroupAnnouncementRequest
type CreateGroupAnnouncementRequest struct {
	// Announcement title
	Title string `json:"title"`
	// Announcement text
	Text *string `json:"text,omitempty"`
	ImageId *string `json:"imageId,omitempty"`
	// Send notification to group members.
	SendNotification *bool `json:"sendNotification,omitempty"`
}

// NewCreateGroupAnnouncementRequest instantiates a new CreateGroupAnnouncementRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateGroupAnnouncementRequest(title string) *CreateGroupAnnouncementRequest {
	this := CreateGroupAnnouncementRequest{}
	this.Title = title
	var sendNotification bool = false
	this.SendNotification = &sendNotification
	return &this
}

// NewCreateGroupAnnouncementRequestWithDefaults instantiates a new CreateGroupAnnouncementRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateGroupAnnouncementRequestWithDefaults() *CreateGroupAnnouncementRequest {
	this := CreateGroupAnnouncementRequest{}
	var sendNotification bool = false
	this.SendNotification = &sendNotification
	return &this
}

// GetTitle returns the Title field value
func (o *CreateGroupAnnouncementRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CreateGroupAnnouncementRequest) GetTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CreateGroupAnnouncementRequest) SetTitle(v string) {
	o.Title = v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *CreateGroupAnnouncementRequest) GetText() string {
	if o == nil || isNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGroupAnnouncementRequest) GetTextOk() (*string, bool) {
	if o == nil || isNil(o.Text) {
    return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *CreateGroupAnnouncementRequest) HasText() bool {
	if o != nil && !isNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *CreateGroupAnnouncementRequest) SetText(v string) {
	o.Text = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *CreateGroupAnnouncementRequest) GetImageId() string {
	if o == nil || isNil(o.ImageId) {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGroupAnnouncementRequest) GetImageIdOk() (*string, bool) {
	if o == nil || isNil(o.ImageId) {
    return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *CreateGroupAnnouncementRequest) HasImageId() bool {
	if o != nil && !isNil(o.ImageId) {
		return true
	}

	return false
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *CreateGroupAnnouncementRequest) SetImageId(v string) {
	o.ImageId = &v
}

// GetSendNotification returns the SendNotification field value if set, zero value otherwise.
func (o *CreateGroupAnnouncementRequest) GetSendNotification() bool {
	if o == nil || isNil(o.SendNotification) {
		var ret bool
		return ret
	}
	return *o.SendNotification
}

// GetSendNotificationOk returns a tuple with the SendNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGroupAnnouncementRequest) GetSendNotificationOk() (*bool, bool) {
	if o == nil || isNil(o.SendNotification) {
    return nil, false
	}
	return o.SendNotification, true
}

// HasSendNotification returns a boolean if a field has been set.
func (o *CreateGroupAnnouncementRequest) HasSendNotification() bool {
	if o != nil && !isNil(o.SendNotification) {
		return true
	}

	return false
}

// SetSendNotification gets a reference to the given bool and assigns it to the SendNotification field.
func (o *CreateGroupAnnouncementRequest) SetSendNotification(v bool) {
	o.SendNotification = &v
}

func (o CreateGroupAnnouncementRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["title"] = o.Title
	}
	if !isNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !isNil(o.ImageId) {
		toSerialize["imageId"] = o.ImageId
	}
	if !isNil(o.SendNotification) {
		toSerialize["sendNotification"] = o.SendNotification
	}
	return json.Marshal(toSerialize)
}

type NullableCreateGroupAnnouncementRequest struct {
	value *CreateGroupAnnouncementRequest
	isSet bool
}

func (v NullableCreateGroupAnnouncementRequest) Get() *CreateGroupAnnouncementRequest {
	return v.value
}

func (v *NullableCreateGroupAnnouncementRequest) Set(val *CreateGroupAnnouncementRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateGroupAnnouncementRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateGroupAnnouncementRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateGroupAnnouncementRequest(val *CreateGroupAnnouncementRequest) *NullableCreateGroupAnnouncementRequest {
	return &NullableCreateGroupAnnouncementRequest{value: val, isSet: true}
}

func (v NullableCreateGroupAnnouncementRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateGroupAnnouncementRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


