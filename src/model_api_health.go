/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
)

// APIHealth struct for APIHealth
type APIHealth struct {
	Ok bool `json:"ok"`
	ServerName string `json:"serverName"`
	BuildVersionTag string `json:"buildVersionTag"`
}

// NewAPIHealth instantiates a new APIHealth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIHealth(ok bool, serverName string, buildVersionTag string) *APIHealth {
	this := APIHealth{}
	this.Ok = ok
	this.ServerName = serverName
	this.BuildVersionTag = buildVersionTag
	return &this
}

// NewAPIHealthWithDefaults instantiates a new APIHealth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIHealthWithDefaults() *APIHealth {
	this := APIHealth{}
	return &this
}

// GetOk returns the Ok field value
func (o *APIHealth) GetOk() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Ok
}

// GetOkOk returns a tuple with the Ok field value
// and a boolean to check if the value has been set.
func (o *APIHealth) GetOkOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ok, true
}

// SetOk sets field value
func (o *APIHealth) SetOk(v bool) {
	o.Ok = v
}

// GetServerName returns the ServerName field value
func (o *APIHealth) GetServerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value
// and a boolean to check if the value has been set.
func (o *APIHealth) GetServerNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ServerName, true
}

// SetServerName sets field value
func (o *APIHealth) SetServerName(v string) {
	o.ServerName = v
}

// GetBuildVersionTag returns the BuildVersionTag field value
func (o *APIHealth) GetBuildVersionTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BuildVersionTag
}

// GetBuildVersionTagOk returns a tuple with the BuildVersionTag field value
// and a boolean to check if the value has been set.
func (o *APIHealth) GetBuildVersionTagOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.BuildVersionTag, true
}

// SetBuildVersionTag sets field value
func (o *APIHealth) SetBuildVersionTag(v string) {
	o.BuildVersionTag = v
}

func (o APIHealth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ok"] = o.Ok
	}
	if true {
		toSerialize["serverName"] = o.ServerName
	}
	if true {
		toSerialize["buildVersionTag"] = o.BuildVersionTag
	}
	return json.Marshal(toSerialize)
}

type NullableAPIHealth struct {
	value *APIHealth
	isSet bool
}

func (v NullableAPIHealth) Get() *APIHealth {
	return v.value
}

func (v *NullableAPIHealth) Set(val *APIHealth) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIHealth) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIHealth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIHealth(val *APIHealth) *NullableAPIHealth {
	return &NullableAPIHealth{value: val, isSet: true}
}

func (v NullableAPIHealth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIHealth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


