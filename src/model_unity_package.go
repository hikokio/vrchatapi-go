/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
	"time"
)

// UnityPackage 
type UnityPackage struct {
	AssetUrl *string `json:"assetUrl,omitempty"`
	AssetUrlObject map[string]interface{} `json:"assetUrlObject,omitempty"`
	AssetVersion int32 `json:"assetVersion"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Id string `json:"id"`
	// This can be `standalonewindows` or `android`, but can also pretty much be any random Unity verison such as `2019.2.4-801-Release` or `2019.2.2-772-Release` or even `unknownplatform`.
	Platform string `json:"platform"`
	PluginUrl *string `json:"pluginUrl,omitempty"`
	PluginUrlObject map[string]interface{} `json:"pluginUrlObject,omitempty"`
	UnitySortNumber *int64 `json:"unitySortNumber,omitempty"`
	UnityVersion string `json:"unityVersion"`
}

// NewUnityPackage instantiates a new UnityPackage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnityPackage(assetVersion int32, id string, platform string, unityVersion string) *UnityPackage {
	this := UnityPackage{}
	this.AssetVersion = assetVersion
	this.Id = id
	this.Platform = platform
	this.UnityVersion = unityVersion
	return &this
}

// NewUnityPackageWithDefaults instantiates a new UnityPackage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnityPackageWithDefaults() *UnityPackage {
	this := UnityPackage{}
	var unityVersion string = "5.3.4p1"
	this.UnityVersion = unityVersion
	return &this
}

// GetAssetUrl returns the AssetUrl field value if set, zero value otherwise.
func (o *UnityPackage) GetAssetUrl() string {
	if o == nil || isNil(o.AssetUrl) {
		var ret string
		return ret
	}
	return *o.AssetUrl
}

// GetAssetUrlOk returns a tuple with the AssetUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnityPackage) GetAssetUrlOk() (*string, bool) {
	if o == nil || isNil(o.AssetUrl) {
    return nil, false
	}
	return o.AssetUrl, true
}

// HasAssetUrl returns a boolean if a field has been set.
func (o *UnityPackage) HasAssetUrl() bool {
	if o != nil && !isNil(o.AssetUrl) {
		return true
	}

	return false
}

// SetAssetUrl gets a reference to the given string and assigns it to the AssetUrl field.
func (o *UnityPackage) SetAssetUrl(v string) {
	o.AssetUrl = &v
}

// GetAssetUrlObject returns the AssetUrlObject field value if set, zero value otherwise.
func (o *UnityPackage) GetAssetUrlObject() map[string]interface{} {
	if o == nil || isNil(o.AssetUrlObject) {
		var ret map[string]interface{}
		return ret
	}
	return o.AssetUrlObject
}

// GetAssetUrlObjectOk returns a tuple with the AssetUrlObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnityPackage) GetAssetUrlObjectOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.AssetUrlObject) {
    return map[string]interface{}{}, false
	}
	return o.AssetUrlObject, true
}

// HasAssetUrlObject returns a boolean if a field has been set.
func (o *UnityPackage) HasAssetUrlObject() bool {
	if o != nil && !isNil(o.AssetUrlObject) {
		return true
	}

	return false
}

// SetAssetUrlObject gets a reference to the given map[string]interface{} and assigns it to the AssetUrlObject field.
func (o *UnityPackage) SetAssetUrlObject(v map[string]interface{}) {
	o.AssetUrlObject = v
}

// GetAssetVersion returns the AssetVersion field value
func (o *UnityPackage) GetAssetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AssetVersion
}

// GetAssetVersionOk returns a tuple with the AssetVersion field value
// and a boolean to check if the value has been set.
func (o *UnityPackage) GetAssetVersionOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AssetVersion, true
}

// SetAssetVersion sets field value
func (o *UnityPackage) SetAssetVersion(v int32) {
	o.AssetVersion = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *UnityPackage) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnityPackage) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *UnityPackage) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *UnityPackage) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetId returns the Id field value
func (o *UnityPackage) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UnityPackage) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UnityPackage) SetId(v string) {
	o.Id = v
}

// GetPlatform returns the Platform field value
func (o *UnityPackage) GetPlatform() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *UnityPackage) GetPlatformOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *UnityPackage) SetPlatform(v string) {
	o.Platform = v
}

// GetPluginUrl returns the PluginUrl field value if set, zero value otherwise.
func (o *UnityPackage) GetPluginUrl() string {
	if o == nil || isNil(o.PluginUrl) {
		var ret string
		return ret
	}
	return *o.PluginUrl
}

// GetPluginUrlOk returns a tuple with the PluginUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnityPackage) GetPluginUrlOk() (*string, bool) {
	if o == nil || isNil(o.PluginUrl) {
    return nil, false
	}
	return o.PluginUrl, true
}

// HasPluginUrl returns a boolean if a field has been set.
func (o *UnityPackage) HasPluginUrl() bool {
	if o != nil && !isNil(o.PluginUrl) {
		return true
	}

	return false
}

// SetPluginUrl gets a reference to the given string and assigns it to the PluginUrl field.
func (o *UnityPackage) SetPluginUrl(v string) {
	o.PluginUrl = &v
}

// GetPluginUrlObject returns the PluginUrlObject field value if set, zero value otherwise.
func (o *UnityPackage) GetPluginUrlObject() map[string]interface{} {
	if o == nil || isNil(o.PluginUrlObject) {
		var ret map[string]interface{}
		return ret
	}
	return o.PluginUrlObject
}

// GetPluginUrlObjectOk returns a tuple with the PluginUrlObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnityPackage) GetPluginUrlObjectOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.PluginUrlObject) {
    return map[string]interface{}{}, false
	}
	return o.PluginUrlObject, true
}

// HasPluginUrlObject returns a boolean if a field has been set.
func (o *UnityPackage) HasPluginUrlObject() bool {
	if o != nil && !isNil(o.PluginUrlObject) {
		return true
	}

	return false
}

// SetPluginUrlObject gets a reference to the given map[string]interface{} and assigns it to the PluginUrlObject field.
func (o *UnityPackage) SetPluginUrlObject(v map[string]interface{}) {
	o.PluginUrlObject = v
}

// GetUnitySortNumber returns the UnitySortNumber field value if set, zero value otherwise.
func (o *UnityPackage) GetUnitySortNumber() int64 {
	if o == nil || isNil(o.UnitySortNumber) {
		var ret int64
		return ret
	}
	return *o.UnitySortNumber
}

// GetUnitySortNumberOk returns a tuple with the UnitySortNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnityPackage) GetUnitySortNumberOk() (*int64, bool) {
	if o == nil || isNil(o.UnitySortNumber) {
    return nil, false
	}
	return o.UnitySortNumber, true
}

// HasUnitySortNumber returns a boolean if a field has been set.
func (o *UnityPackage) HasUnitySortNumber() bool {
	if o != nil && !isNil(o.UnitySortNumber) {
		return true
	}

	return false
}

// SetUnitySortNumber gets a reference to the given int64 and assigns it to the UnitySortNumber field.
func (o *UnityPackage) SetUnitySortNumber(v int64) {
	o.UnitySortNumber = &v
}

// GetUnityVersion returns the UnityVersion field value
func (o *UnityPackage) GetUnityVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnityVersion
}

// GetUnityVersionOk returns a tuple with the UnityVersion field value
// and a boolean to check if the value has been set.
func (o *UnityPackage) GetUnityVersionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UnityVersion, true
}

// SetUnityVersion sets field value
func (o *UnityPackage) SetUnityVersion(v string) {
	o.UnityVersion = v
}

func (o UnityPackage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AssetUrl) {
		toSerialize["assetUrl"] = o.AssetUrl
	}
	if !isNil(o.AssetUrlObject) {
		toSerialize["assetUrlObject"] = o.AssetUrlObject
	}
	if true {
		toSerialize["assetVersion"] = o.AssetVersion
	}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["platform"] = o.Platform
	}
	if !isNil(o.PluginUrl) {
		toSerialize["pluginUrl"] = o.PluginUrl
	}
	if !isNil(o.PluginUrlObject) {
		toSerialize["pluginUrlObject"] = o.PluginUrlObject
	}
	if !isNil(o.UnitySortNumber) {
		toSerialize["unitySortNumber"] = o.UnitySortNumber
	}
	if true {
		toSerialize["unityVersion"] = o.UnityVersion
	}
	return json.Marshal(toSerialize)
}

type NullableUnityPackage struct {
	value *UnityPackage
	isSet bool
}

func (v NullableUnityPackage) Get() *UnityPackage {
	return v.value
}

func (v *NullableUnityPackage) Set(val *UnityPackage) {
	v.value = val
	v.isSet = true
}

func (v NullableUnityPackage) IsSet() bool {
	return v.isSet
}

func (v *NullableUnityPackage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnityPackage(val *UnityPackage) *NullableUnityPackage {
	return &NullableUnityPackage{value: val, isSet: true}
}

func (v NullableUnityPackage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnityPackage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


