/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
)

// FileUploadURL 
type FileUploadURL struct {
	// 
	Url string `json:"url"`
}

// NewFileUploadURL instantiates a new FileUploadURL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileUploadURL(url string) *FileUploadURL {
	this := FileUploadURL{}
	this.Url = url
	return &this
}

// NewFileUploadURLWithDefaults instantiates a new FileUploadURL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileUploadURLWithDefaults() *FileUploadURL {
	this := FileUploadURL{}
	return &this
}

// GetUrl returns the Url field value
func (o *FileUploadURL) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *FileUploadURL) GetUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *FileUploadURL) SetUrl(v string) {
	o.Url = v
}

func (o FileUploadURL) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableFileUploadURL struct {
	value *FileUploadURL
	isSet bool
}

func (v NullableFileUploadURL) Get() *FileUploadURL {
	return v.value
}

func (v *NullableFileUploadURL) Set(val *FileUploadURL) {
	v.value = val
	v.isSet = true
}

func (v NullableFileUploadURL) IsSet() bool {
	return v.isSet
}

func (v *NullableFileUploadURL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileUploadURL(val *FileUploadURL) *NullableFileUploadURL {
	return &NullableFileUploadURL{value: val, isSet: true}
}

func (v NullableFileUploadURL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileUploadURL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


