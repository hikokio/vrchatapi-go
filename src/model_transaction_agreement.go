/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
)

// TransactionAgreement 
type TransactionAgreement struct {
	AgreementId string `json:"agreementId"`
	ItemId float32 `json:"itemId"`
	// This is NOT TransactionStatus, but whatever Steam return.
	Status string `json:"status"`
	Period string `json:"period"`
	Frequency float32 `json:"frequency"`
	BillingType string `json:"billingType"`
	StartDate string `json:"startDate"`
	EndDate string `json:"endDate"`
	RecurringAmt float32 `json:"recurringAmt"`
	Currency string `json:"currency"`
	TimeCreated string `json:"timeCreated"`
	NextPayment string `json:"nextPayment"`
	LastPayment string `json:"lastPayment"`
	LastAmount float32 `json:"lastAmount"`
	LastAmountVat float32 `json:"lastAmountVat"`
	Outstanding float32 `json:"outstanding"`
	FailedAttempts float32 `json:"failedAttempts"`
}

// NewTransactionAgreement instantiates a new TransactionAgreement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionAgreement(agreementId string, itemId float32, status string, period string, frequency float32, billingType string, startDate string, endDate string, recurringAmt float32, currency string, timeCreated string, nextPayment string, lastPayment string, lastAmount float32, lastAmountVat float32, outstanding float32, failedAttempts float32) *TransactionAgreement {
	this := TransactionAgreement{}
	this.AgreementId = agreementId
	this.ItemId = itemId
	this.Status = status
	this.Period = period
	this.Frequency = frequency
	this.BillingType = billingType
	this.StartDate = startDate
	this.EndDate = endDate
	this.RecurringAmt = recurringAmt
	this.Currency = currency
	this.TimeCreated = timeCreated
	this.NextPayment = nextPayment
	this.LastPayment = lastPayment
	this.LastAmount = lastAmount
	this.LastAmountVat = lastAmountVat
	this.Outstanding = outstanding
	this.FailedAttempts = failedAttempts
	return &this
}

// NewTransactionAgreementWithDefaults instantiates a new TransactionAgreement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionAgreementWithDefaults() *TransactionAgreement {
	this := TransactionAgreement{}
	return &this
}

// GetAgreementId returns the AgreementId field value
func (o *TransactionAgreement) GetAgreementId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AgreementId
}

// GetAgreementIdOk returns a tuple with the AgreementId field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetAgreementIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AgreementId, true
}

// SetAgreementId sets field value
func (o *TransactionAgreement) SetAgreementId(v string) {
	o.AgreementId = v
}

// GetItemId returns the ItemId field value
func (o *TransactionAgreement) GetItemId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetItemIdOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ItemId, true
}

// SetItemId sets field value
func (o *TransactionAgreement) SetItemId(v float32) {
	o.ItemId = v
}

// GetStatus returns the Status field value
func (o *TransactionAgreement) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetStatusOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *TransactionAgreement) SetStatus(v string) {
	o.Status = v
}

// GetPeriod returns the Period field value
func (o *TransactionAgreement) GetPeriod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Period
}

// GetPeriodOk returns a tuple with the Period field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetPeriodOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Period, true
}

// SetPeriod sets field value
func (o *TransactionAgreement) SetPeriod(v string) {
	o.Period = v
}

// GetFrequency returns the Frequency field value
func (o *TransactionAgreement) GetFrequency() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetFrequencyOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Frequency, true
}

// SetFrequency sets field value
func (o *TransactionAgreement) SetFrequency(v float32) {
	o.Frequency = v
}

// GetBillingType returns the BillingType field value
func (o *TransactionAgreement) GetBillingType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillingType
}

// GetBillingTypeOk returns a tuple with the BillingType field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetBillingTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.BillingType, true
}

// SetBillingType sets field value
func (o *TransactionAgreement) SetBillingType(v string) {
	o.BillingType = v
}

// GetStartDate returns the StartDate field value
func (o *TransactionAgreement) GetStartDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetStartDateOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *TransactionAgreement) SetStartDate(v string) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *TransactionAgreement) GetEndDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetEndDateOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *TransactionAgreement) SetEndDate(v string) {
	o.EndDate = v
}

// GetRecurringAmt returns the RecurringAmt field value
func (o *TransactionAgreement) GetRecurringAmt() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RecurringAmt
}

// GetRecurringAmtOk returns a tuple with the RecurringAmt field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetRecurringAmtOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RecurringAmt, true
}

// SetRecurringAmt sets field value
func (o *TransactionAgreement) SetRecurringAmt(v float32) {
	o.RecurringAmt = v
}

// GetCurrency returns the Currency field value
func (o *TransactionAgreement) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetCurrencyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *TransactionAgreement) SetCurrency(v string) {
	o.Currency = v
}

// GetTimeCreated returns the TimeCreated field value
func (o *TransactionAgreement) GetTimeCreated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeCreated
}

// GetTimeCreatedOk returns a tuple with the TimeCreated field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetTimeCreatedOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TimeCreated, true
}

// SetTimeCreated sets field value
func (o *TransactionAgreement) SetTimeCreated(v string) {
	o.TimeCreated = v
}

// GetNextPayment returns the NextPayment field value
func (o *TransactionAgreement) GetNextPayment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NextPayment
}

// GetNextPaymentOk returns a tuple with the NextPayment field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetNextPaymentOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NextPayment, true
}

// SetNextPayment sets field value
func (o *TransactionAgreement) SetNextPayment(v string) {
	o.NextPayment = v
}

// GetLastPayment returns the LastPayment field value
func (o *TransactionAgreement) GetLastPayment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastPayment
}

// GetLastPaymentOk returns a tuple with the LastPayment field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetLastPaymentOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LastPayment, true
}

// SetLastPayment sets field value
func (o *TransactionAgreement) SetLastPayment(v string) {
	o.LastPayment = v
}

// GetLastAmount returns the LastAmount field value
func (o *TransactionAgreement) GetLastAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LastAmount
}

// GetLastAmountOk returns a tuple with the LastAmount field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetLastAmountOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LastAmount, true
}

// SetLastAmount sets field value
func (o *TransactionAgreement) SetLastAmount(v float32) {
	o.LastAmount = v
}

// GetLastAmountVat returns the LastAmountVat field value
func (o *TransactionAgreement) GetLastAmountVat() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LastAmountVat
}

// GetLastAmountVatOk returns a tuple with the LastAmountVat field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetLastAmountVatOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LastAmountVat, true
}

// SetLastAmountVat sets field value
func (o *TransactionAgreement) SetLastAmountVat(v float32) {
	o.LastAmountVat = v
}

// GetOutstanding returns the Outstanding field value
func (o *TransactionAgreement) GetOutstanding() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Outstanding
}

// GetOutstandingOk returns a tuple with the Outstanding field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetOutstandingOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Outstanding, true
}

// SetOutstanding sets field value
func (o *TransactionAgreement) SetOutstanding(v float32) {
	o.Outstanding = v
}

// GetFailedAttempts returns the FailedAttempts field value
func (o *TransactionAgreement) GetFailedAttempts() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FailedAttempts
}

// GetFailedAttemptsOk returns a tuple with the FailedAttempts field value
// and a boolean to check if the value has been set.
func (o *TransactionAgreement) GetFailedAttemptsOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.FailedAttempts, true
}

// SetFailedAttempts sets field value
func (o *TransactionAgreement) SetFailedAttempts(v float32) {
	o.FailedAttempts = v
}

func (o TransactionAgreement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["agreementId"] = o.AgreementId
	}
	if true {
		toSerialize["itemId"] = o.ItemId
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["period"] = o.Period
	}
	if true {
		toSerialize["frequency"] = o.Frequency
	}
	if true {
		toSerialize["billingType"] = o.BillingType
	}
	if true {
		toSerialize["startDate"] = o.StartDate
	}
	if true {
		toSerialize["endDate"] = o.EndDate
	}
	if true {
		toSerialize["recurringAmt"] = o.RecurringAmt
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	if true {
		toSerialize["timeCreated"] = o.TimeCreated
	}
	if true {
		toSerialize["nextPayment"] = o.NextPayment
	}
	if true {
		toSerialize["lastPayment"] = o.LastPayment
	}
	if true {
		toSerialize["lastAmount"] = o.LastAmount
	}
	if true {
		toSerialize["lastAmountVat"] = o.LastAmountVat
	}
	if true {
		toSerialize["outstanding"] = o.Outstanding
	}
	if true {
		toSerialize["failedAttempts"] = o.FailedAttempts
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionAgreement struct {
	value *TransactionAgreement
	isSet bool
}

func (v NullableTransactionAgreement) Get() *TransactionAgreement {
	return v.value
}

func (v *NullableTransactionAgreement) Set(val *TransactionAgreement) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionAgreement) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionAgreement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionAgreement(val *TransactionAgreement) *NullableTransactionAgreement {
	return &NullableTransactionAgreement{value: val, isSet: true}
}

func (v NullableTransactionAgreement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionAgreement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


