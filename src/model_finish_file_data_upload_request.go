/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
)

// FinishFileDataUploadRequest 
type FinishFileDataUploadRequest struct {
	// Array of ETags uploaded.
	Etags []string `json:"etags,omitempty"`
	// Always a zero in string form, despite how many parts uploaded.
	// Deprecated
	NextPartNumber string `json:"nextPartNumber"`
	// Always a zero in string form, despite how many parts uploaded.
	// Deprecated
	MaxParts string `json:"maxParts"`
}

// NewFinishFileDataUploadRequest instantiates a new FinishFileDataUploadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinishFileDataUploadRequest(nextPartNumber string, maxParts string) *FinishFileDataUploadRequest {
	this := FinishFileDataUploadRequest{}
	this.NextPartNumber = nextPartNumber
	this.MaxParts = maxParts
	return &this
}

// NewFinishFileDataUploadRequestWithDefaults instantiates a new FinishFileDataUploadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinishFileDataUploadRequestWithDefaults() *FinishFileDataUploadRequest {
	this := FinishFileDataUploadRequest{}
	var nextPartNumber string = "0"
	this.NextPartNumber = nextPartNumber
	var maxParts string = "0"
	this.MaxParts = maxParts
	return &this
}

// GetEtags returns the Etags field value if set, zero value otherwise.
func (o *FinishFileDataUploadRequest) GetEtags() []string {
	if o == nil || isNil(o.Etags) {
		var ret []string
		return ret
	}
	return o.Etags
}

// GetEtagsOk returns a tuple with the Etags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinishFileDataUploadRequest) GetEtagsOk() ([]string, bool) {
	if o == nil || isNil(o.Etags) {
    return nil, false
	}
	return o.Etags, true
}

// HasEtags returns a boolean if a field has been set.
func (o *FinishFileDataUploadRequest) HasEtags() bool {
	if o != nil && !isNil(o.Etags) {
		return true
	}

	return false
}

// SetEtags gets a reference to the given []string and assigns it to the Etags field.
func (o *FinishFileDataUploadRequest) SetEtags(v []string) {
	o.Etags = v
}

// GetNextPartNumber returns the NextPartNumber field value
// Deprecated
func (o *FinishFileDataUploadRequest) GetNextPartNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NextPartNumber
}

// GetNextPartNumberOk returns a tuple with the NextPartNumber field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *FinishFileDataUploadRequest) GetNextPartNumberOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NextPartNumber, true
}

// SetNextPartNumber sets field value
// Deprecated
func (o *FinishFileDataUploadRequest) SetNextPartNumber(v string) {
	o.NextPartNumber = v
}

// GetMaxParts returns the MaxParts field value
// Deprecated
func (o *FinishFileDataUploadRequest) GetMaxParts() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxParts
}

// GetMaxPartsOk returns a tuple with the MaxParts field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *FinishFileDataUploadRequest) GetMaxPartsOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MaxParts, true
}

// SetMaxParts sets field value
// Deprecated
func (o *FinishFileDataUploadRequest) SetMaxParts(v string) {
	o.MaxParts = v
}

func (o FinishFileDataUploadRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Etags) {
		toSerialize["etags"] = o.Etags
	}
	if true {
		toSerialize["nextPartNumber"] = o.NextPartNumber
	}
	if true {
		toSerialize["maxParts"] = o.MaxParts
	}
	return json.Marshal(toSerialize)
}

type NullableFinishFileDataUploadRequest struct {
	value *FinishFileDataUploadRequest
	isSet bool
}

func (v NullableFinishFileDataUploadRequest) Get() *FinishFileDataUploadRequest {
	return v.value
}

func (v *NullableFinishFileDataUploadRequest) Set(val *FinishFileDataUploadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFinishFileDataUploadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFinishFileDataUploadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinishFileDataUploadRequest(val *FinishFileDataUploadRequest) *NullableFinishFileDataUploadRequest {
	return &NullableFinishFileDataUploadRequest{value: val, isSet: true}
}

func (v NullableFinishFileDataUploadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinishFileDataUploadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


