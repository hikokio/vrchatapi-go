/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
)

// BanGroupMemberRequest struct for BanGroupMemberRequest
type BanGroupMemberRequest struct {
	// A users unique ID, usually in the form of `usr_c1644b5b-3ca4-45b4-97c6-a2a0de70d469`. Legacy players can have old IDs in the form of `8JoV9XEdpo`. The ID can never be changed.
	UserId string `json:"userId"`
}

// NewBanGroupMemberRequest instantiates a new BanGroupMemberRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBanGroupMemberRequest(userId string) *BanGroupMemberRequest {
	this := BanGroupMemberRequest{}
	this.UserId = userId
	return &this
}

// NewBanGroupMemberRequestWithDefaults instantiates a new BanGroupMemberRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBanGroupMemberRequestWithDefaults() *BanGroupMemberRequest {
	this := BanGroupMemberRequest{}
	return &this
}

// GetUserId returns the UserId field value
func (o *BanGroupMemberRequest) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *BanGroupMemberRequest) GetUserIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *BanGroupMemberRequest) SetUserId(v string) {
	o.UserId = v
}

func (o BanGroupMemberRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableBanGroupMemberRequest struct {
	value *BanGroupMemberRequest
	isSet bool
}

func (v NullableBanGroupMemberRequest) Get() *BanGroupMemberRequest {
	return v.value
}

func (v *NullableBanGroupMemberRequest) Set(val *BanGroupMemberRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBanGroupMemberRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBanGroupMemberRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBanGroupMemberRequest(val *BanGroupMemberRequest) *NullableBanGroupMemberRequest {
	return &NullableBanGroupMemberRequest{value: val, isSet: true}
}

func (v NullableBanGroupMemberRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBanGroupMemberRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


