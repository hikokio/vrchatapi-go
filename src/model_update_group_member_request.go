/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
)

// UpdateGroupMemberRequest struct for UpdateGroupMemberRequest
type UpdateGroupMemberRequest struct {
	Visibility *GroupUserVisibility `json:"visibility,omitempty"`
	IsSubscribedToAnnouncements *bool `json:"isSubscribedToAnnouncements,omitempty"`
	ManagerNotes *string `json:"managerNotes,omitempty"`
}

// NewUpdateGroupMemberRequest instantiates a new UpdateGroupMemberRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateGroupMemberRequest() *UpdateGroupMemberRequest {
	this := UpdateGroupMemberRequest{}
	return &this
}

// NewUpdateGroupMemberRequestWithDefaults instantiates a new UpdateGroupMemberRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateGroupMemberRequestWithDefaults() *UpdateGroupMemberRequest {
	this := UpdateGroupMemberRequest{}
	return &this
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *UpdateGroupMemberRequest) GetVisibility() GroupUserVisibility {
	if o == nil || isNil(o.Visibility) {
		var ret GroupUserVisibility
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGroupMemberRequest) GetVisibilityOk() (*GroupUserVisibility, bool) {
	if o == nil || isNil(o.Visibility) {
    return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *UpdateGroupMemberRequest) HasVisibility() bool {
	if o != nil && !isNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given GroupUserVisibility and assigns it to the Visibility field.
func (o *UpdateGroupMemberRequest) SetVisibility(v GroupUserVisibility) {
	o.Visibility = &v
}

// GetIsSubscribedToAnnouncements returns the IsSubscribedToAnnouncements field value if set, zero value otherwise.
func (o *UpdateGroupMemberRequest) GetIsSubscribedToAnnouncements() bool {
	if o == nil || isNil(o.IsSubscribedToAnnouncements) {
		var ret bool
		return ret
	}
	return *o.IsSubscribedToAnnouncements
}

// GetIsSubscribedToAnnouncementsOk returns a tuple with the IsSubscribedToAnnouncements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGroupMemberRequest) GetIsSubscribedToAnnouncementsOk() (*bool, bool) {
	if o == nil || isNil(o.IsSubscribedToAnnouncements) {
    return nil, false
	}
	return o.IsSubscribedToAnnouncements, true
}

// HasIsSubscribedToAnnouncements returns a boolean if a field has been set.
func (o *UpdateGroupMemberRequest) HasIsSubscribedToAnnouncements() bool {
	if o != nil && !isNil(o.IsSubscribedToAnnouncements) {
		return true
	}

	return false
}

// SetIsSubscribedToAnnouncements gets a reference to the given bool and assigns it to the IsSubscribedToAnnouncements field.
func (o *UpdateGroupMemberRequest) SetIsSubscribedToAnnouncements(v bool) {
	o.IsSubscribedToAnnouncements = &v
}

// GetManagerNotes returns the ManagerNotes field value if set, zero value otherwise.
func (o *UpdateGroupMemberRequest) GetManagerNotes() string {
	if o == nil || isNil(o.ManagerNotes) {
		var ret string
		return ret
	}
	return *o.ManagerNotes
}

// GetManagerNotesOk returns a tuple with the ManagerNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGroupMemberRequest) GetManagerNotesOk() (*string, bool) {
	if o == nil || isNil(o.ManagerNotes) {
    return nil, false
	}
	return o.ManagerNotes, true
}

// HasManagerNotes returns a boolean if a field has been set.
func (o *UpdateGroupMemberRequest) HasManagerNotes() bool {
	if o != nil && !isNil(o.ManagerNotes) {
		return true
	}

	return false
}

// SetManagerNotes gets a reference to the given string and assigns it to the ManagerNotes field.
func (o *UpdateGroupMemberRequest) SetManagerNotes(v string) {
	o.ManagerNotes = &v
}

func (o UpdateGroupMemberRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !isNil(o.IsSubscribedToAnnouncements) {
		toSerialize["isSubscribedToAnnouncements"] = o.IsSubscribedToAnnouncements
	}
	if !isNil(o.ManagerNotes) {
		toSerialize["managerNotes"] = o.ManagerNotes
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateGroupMemberRequest struct {
	value *UpdateGroupMemberRequest
	isSet bool
}

func (v NullableUpdateGroupMemberRequest) Get() *UpdateGroupMemberRequest {
	return v.value
}

func (v *NullableUpdateGroupMemberRequest) Set(val *UpdateGroupMemberRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateGroupMemberRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateGroupMemberRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateGroupMemberRequest(val *UpdateGroupMemberRequest) *NullableUpdateGroupMemberRequest {
	return &NullableUpdateGroupMemberRequest{value: val, isSet: true}
}

func (v NullableUpdateGroupMemberRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateGroupMemberRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


