/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
)

// TransactionSteamInfo 
type TransactionSteamInfo struct {
	WalletInfo TransactionSteamWalletInfo `json:"walletInfo"`
	// Steam User ID
	SteamId string `json:"steamId"`
	// Steam Order ID
	OrderId string `json:"orderId"`
	// Empty
	SteamUrl string `json:"steamUrl"`
	// Steam Transaction ID, NOT the same as VRChat TransactionID
	TransId string `json:"transId"`
}

// NewTransactionSteamInfo instantiates a new TransactionSteamInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionSteamInfo(walletInfo TransactionSteamWalletInfo, steamId string, orderId string, steamUrl string, transId string) *TransactionSteamInfo {
	this := TransactionSteamInfo{}
	this.WalletInfo = walletInfo
	this.SteamId = steamId
	this.OrderId = orderId
	this.SteamUrl = steamUrl
	this.TransId = transId
	return &this
}

// NewTransactionSteamInfoWithDefaults instantiates a new TransactionSteamInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionSteamInfoWithDefaults() *TransactionSteamInfo {
	this := TransactionSteamInfo{}
	return &this
}

// GetWalletInfo returns the WalletInfo field value
func (o *TransactionSteamInfo) GetWalletInfo() TransactionSteamWalletInfo {
	if o == nil {
		var ret TransactionSteamWalletInfo
		return ret
	}

	return o.WalletInfo
}

// GetWalletInfoOk returns a tuple with the WalletInfo field value
// and a boolean to check if the value has been set.
func (o *TransactionSteamInfo) GetWalletInfoOk() (*TransactionSteamWalletInfo, bool) {
	if o == nil {
    return nil, false
	}
	return &o.WalletInfo, true
}

// SetWalletInfo sets field value
func (o *TransactionSteamInfo) SetWalletInfo(v TransactionSteamWalletInfo) {
	o.WalletInfo = v
}

// GetSteamId returns the SteamId field value
func (o *TransactionSteamInfo) GetSteamId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SteamId
}

// GetSteamIdOk returns a tuple with the SteamId field value
// and a boolean to check if the value has been set.
func (o *TransactionSteamInfo) GetSteamIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SteamId, true
}

// SetSteamId sets field value
func (o *TransactionSteamInfo) SetSteamId(v string) {
	o.SteamId = v
}

// GetOrderId returns the OrderId field value
func (o *TransactionSteamInfo) GetOrderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *TransactionSteamInfo) GetOrderIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *TransactionSteamInfo) SetOrderId(v string) {
	o.OrderId = v
}

// GetSteamUrl returns the SteamUrl field value
func (o *TransactionSteamInfo) GetSteamUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SteamUrl
}

// GetSteamUrlOk returns a tuple with the SteamUrl field value
// and a boolean to check if the value has been set.
func (o *TransactionSteamInfo) GetSteamUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SteamUrl, true
}

// SetSteamUrl sets field value
func (o *TransactionSteamInfo) SetSteamUrl(v string) {
	o.SteamUrl = v
}

// GetTransId returns the TransId field value
func (o *TransactionSteamInfo) GetTransId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransId
}

// GetTransIdOk returns a tuple with the TransId field value
// and a boolean to check if the value has been set.
func (o *TransactionSteamInfo) GetTransIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TransId, true
}

// SetTransId sets field value
func (o *TransactionSteamInfo) SetTransId(v string) {
	o.TransId = v
}

func (o TransactionSteamInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["walletInfo"] = o.WalletInfo
	}
	if true {
		toSerialize["steamId"] = o.SteamId
	}
	if true {
		toSerialize["orderId"] = o.OrderId
	}
	if true {
		toSerialize["steamUrl"] = o.SteamUrl
	}
	if true {
		toSerialize["transId"] = o.TransId
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionSteamInfo struct {
	value *TransactionSteamInfo
	isSet bool
}

func (v NullableTransactionSteamInfo) Get() *TransactionSteamInfo {
	return v.value
}

func (v *NullableTransactionSteamInfo) Set(val *TransactionSteamInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionSteamInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionSteamInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionSteamInfo(val *TransactionSteamInfo) *NullableTransactionSteamInfo {
	return &NullableTransactionSteamInfo{value: val, isSet: true}
}

func (v NullableTransactionSteamInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionSteamInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


