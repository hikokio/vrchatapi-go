/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
)

// CreateGroupRequest struct for CreateGroupRequest
type CreateGroupRequest struct {
	Name string `json:"name"`
	ShortCode string `json:"shortCode"`
	Description *string `json:"description,omitempty"`
	JoinState *GroupJoinState `json:"joinState,omitempty"`
	IconId NullableString `json:"iconId,omitempty"`
	BannerId NullableString `json:"bannerId,omitempty"`
	Privacy *GroupPrivacy `json:"privacy,omitempty"`
	RoleTemplate GroupRoleTemplate `json:"roleTemplate"`
}

// NewCreateGroupRequest instantiates a new CreateGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateGroupRequest(name string, shortCode string, roleTemplate GroupRoleTemplate) *CreateGroupRequest {
	this := CreateGroupRequest{}
	this.Name = name
	this.ShortCode = shortCode
	var joinState GroupJoinState = GROUPJOINSTATE_OPEN
	this.JoinState = &joinState
	var privacy GroupPrivacy = GROUPPRIVACY_DEFAULT
	this.Privacy = &privacy
	this.RoleTemplate = roleTemplate
	return &this
}

// NewCreateGroupRequestWithDefaults instantiates a new CreateGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateGroupRequestWithDefaults() *CreateGroupRequest {
	this := CreateGroupRequest{}
	var joinState GroupJoinState = GROUPJOINSTATE_OPEN
	this.JoinState = &joinState
	var privacy GroupPrivacy = GROUPPRIVACY_DEFAULT
	this.Privacy = &privacy
	var roleTemplate GroupRoleTemplate = GROUPROLETEMPLATE_DEFAULT
	this.RoleTemplate = roleTemplate
	return &this
}

// GetName returns the Name field value
func (o *CreateGroupRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateGroupRequest) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateGroupRequest) SetName(v string) {
	o.Name = v
}

// GetShortCode returns the ShortCode field value
func (o *CreateGroupRequest) GetShortCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShortCode
}

// GetShortCodeOk returns a tuple with the ShortCode field value
// and a boolean to check if the value has been set.
func (o *CreateGroupRequest) GetShortCodeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ShortCode, true
}

// SetShortCode sets field value
func (o *CreateGroupRequest) SetShortCode(v string) {
	o.ShortCode = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateGroupRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGroupRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateGroupRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateGroupRequest) SetDescription(v string) {
	o.Description = &v
}

// GetJoinState returns the JoinState field value if set, zero value otherwise.
func (o *CreateGroupRequest) GetJoinState() GroupJoinState {
	if o == nil || isNil(o.JoinState) {
		var ret GroupJoinState
		return ret
	}
	return *o.JoinState
}

// GetJoinStateOk returns a tuple with the JoinState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGroupRequest) GetJoinStateOk() (*GroupJoinState, bool) {
	if o == nil || isNil(o.JoinState) {
    return nil, false
	}
	return o.JoinState, true
}

// HasJoinState returns a boolean if a field has been set.
func (o *CreateGroupRequest) HasJoinState() bool {
	if o != nil && !isNil(o.JoinState) {
		return true
	}

	return false
}

// SetJoinState gets a reference to the given GroupJoinState and assigns it to the JoinState field.
func (o *CreateGroupRequest) SetJoinState(v GroupJoinState) {
	o.JoinState = &v
}

// GetIconId returns the IconId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateGroupRequest) GetIconId() string {
	if o == nil || isNil(o.IconId.Get()) {
		var ret string
		return ret
	}
	return *o.IconId.Get()
}

// GetIconIdOk returns a tuple with the IconId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateGroupRequest) GetIconIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.IconId.Get(), o.IconId.IsSet()
}

// HasIconId returns a boolean if a field has been set.
func (o *CreateGroupRequest) HasIconId() bool {
	if o != nil && o.IconId.IsSet() {
		return true
	}

	return false
}

// SetIconId gets a reference to the given NullableString and assigns it to the IconId field.
func (o *CreateGroupRequest) SetIconId(v string) {
	o.IconId.Set(&v)
}
// SetIconIdNil sets the value for IconId to be an explicit nil
func (o *CreateGroupRequest) SetIconIdNil() {
	o.IconId.Set(nil)
}

// UnsetIconId ensures that no value is present for IconId, not even an explicit nil
func (o *CreateGroupRequest) UnsetIconId() {
	o.IconId.Unset()
}

// GetBannerId returns the BannerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateGroupRequest) GetBannerId() string {
	if o == nil || isNil(o.BannerId.Get()) {
		var ret string
		return ret
	}
	return *o.BannerId.Get()
}

// GetBannerIdOk returns a tuple with the BannerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateGroupRequest) GetBannerIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.BannerId.Get(), o.BannerId.IsSet()
}

// HasBannerId returns a boolean if a field has been set.
func (o *CreateGroupRequest) HasBannerId() bool {
	if o != nil && o.BannerId.IsSet() {
		return true
	}

	return false
}

// SetBannerId gets a reference to the given NullableString and assigns it to the BannerId field.
func (o *CreateGroupRequest) SetBannerId(v string) {
	o.BannerId.Set(&v)
}
// SetBannerIdNil sets the value for BannerId to be an explicit nil
func (o *CreateGroupRequest) SetBannerIdNil() {
	o.BannerId.Set(nil)
}

// UnsetBannerId ensures that no value is present for BannerId, not even an explicit nil
func (o *CreateGroupRequest) UnsetBannerId() {
	o.BannerId.Unset()
}

// GetPrivacy returns the Privacy field value if set, zero value otherwise.
func (o *CreateGroupRequest) GetPrivacy() GroupPrivacy {
	if o == nil || isNil(o.Privacy) {
		var ret GroupPrivacy
		return ret
	}
	return *o.Privacy
}

// GetPrivacyOk returns a tuple with the Privacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGroupRequest) GetPrivacyOk() (*GroupPrivacy, bool) {
	if o == nil || isNil(o.Privacy) {
    return nil, false
	}
	return o.Privacy, true
}

// HasPrivacy returns a boolean if a field has been set.
func (o *CreateGroupRequest) HasPrivacy() bool {
	if o != nil && !isNil(o.Privacy) {
		return true
	}

	return false
}

// SetPrivacy gets a reference to the given GroupPrivacy and assigns it to the Privacy field.
func (o *CreateGroupRequest) SetPrivacy(v GroupPrivacy) {
	o.Privacy = &v
}

// GetRoleTemplate returns the RoleTemplate field value
func (o *CreateGroupRequest) GetRoleTemplate() GroupRoleTemplate {
	if o == nil {
		var ret GroupRoleTemplate
		return ret
	}

	return o.RoleTemplate
}

// GetRoleTemplateOk returns a tuple with the RoleTemplate field value
// and a boolean to check if the value has been set.
func (o *CreateGroupRequest) GetRoleTemplateOk() (*GroupRoleTemplate, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RoleTemplate, true
}

// SetRoleTemplate sets field value
func (o *CreateGroupRequest) SetRoleTemplate(v GroupRoleTemplate) {
	o.RoleTemplate = v
}

func (o CreateGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["shortCode"] = o.ShortCode
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.JoinState) {
		toSerialize["joinState"] = o.JoinState
	}
	if o.IconId.IsSet() {
		toSerialize["iconId"] = o.IconId.Get()
	}
	if o.BannerId.IsSet() {
		toSerialize["bannerId"] = o.BannerId.Get()
	}
	if !isNil(o.Privacy) {
		toSerialize["privacy"] = o.Privacy
	}
	if true {
		toSerialize["roleTemplate"] = o.RoleTemplate
	}
	return json.Marshal(toSerialize)
}

type NullableCreateGroupRequest struct {
	value *CreateGroupRequest
	isSet bool
}

func (v NullableCreateGroupRequest) Get() *CreateGroupRequest {
	return v.value
}

func (v *NullableCreateGroupRequest) Set(val *CreateGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateGroupRequest(val *CreateGroupRequest) *NullableCreateGroupRequest {
	return &NullableCreateGroupRequest{value: val, isSet: true}
}

func (v NullableCreateGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


