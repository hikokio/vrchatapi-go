/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
)

// APIConfigAnnouncement Public Announcement
type APIConfigAnnouncement struct {
	// Announcement name
	Name string `json:"name"`
	// Announcement text
	Text string `json:"text"`
}

// NewAPIConfigAnnouncement instantiates a new APIConfigAnnouncement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIConfigAnnouncement(name string, text string) *APIConfigAnnouncement {
	this := APIConfigAnnouncement{}
	this.Name = name
	this.Text = text
	return &this
}

// NewAPIConfigAnnouncementWithDefaults instantiates a new APIConfigAnnouncement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIConfigAnnouncementWithDefaults() *APIConfigAnnouncement {
	this := APIConfigAnnouncement{}
	return &this
}

// GetName returns the Name field value
func (o *APIConfigAnnouncement) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *APIConfigAnnouncement) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *APIConfigAnnouncement) SetName(v string) {
	o.Name = v
}

// GetText returns the Text field value
func (o *APIConfigAnnouncement) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *APIConfigAnnouncement) GetTextOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *APIConfigAnnouncement) SetText(v string) {
	o.Text = v
}

func (o APIConfigAnnouncement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["text"] = o.Text
	}
	return json.Marshal(toSerialize)
}

type NullableAPIConfigAnnouncement struct {
	value *APIConfigAnnouncement
	isSet bool
}

func (v NullableAPIConfigAnnouncement) Get() *APIConfigAnnouncement {
	return v.value
}

func (v *NullableAPIConfigAnnouncement) Set(val *APIConfigAnnouncement) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIConfigAnnouncement) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIConfigAnnouncement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIConfigAnnouncement(val *APIConfigAnnouncement) *NullableAPIConfigAnnouncement {
	return &NullableAPIConfigAnnouncement{value: val, isSet: true}
}

func (v NullableAPIConfigAnnouncement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIConfigAnnouncement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


