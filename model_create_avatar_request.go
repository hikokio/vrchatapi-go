/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
)

// CreateAvatarRequest struct for CreateAvatarRequest
type CreateAvatarRequest struct {
	AssetUrl *string `json:"assetUrl,omitempty"`
	Id *string `json:"id,omitempty"`
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	//  
	Tags []string `json:"tags,omitempty"`
	ImageUrl string `json:"imageUrl"`
	ReleaseStatus *ReleaseStatus `json:"releaseStatus,omitempty"`
	Version *float32 `json:"version,omitempty"`
	UnityPackageUrl *string `json:"unityPackageUrl,omitempty"`
}

// NewCreateAvatarRequest instantiates a new CreateAvatarRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAvatarRequest(name string, imageUrl string) *CreateAvatarRequest {
	this := CreateAvatarRequest{}
	this.Name = name
	this.ImageUrl = imageUrl
	var releaseStatus ReleaseStatus = RELEASESTATUS_PUBLIC
	this.ReleaseStatus = &releaseStatus
	var version float32 = 1
	this.Version = &version
	return &this
}

// NewCreateAvatarRequestWithDefaults instantiates a new CreateAvatarRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAvatarRequestWithDefaults() *CreateAvatarRequest {
	this := CreateAvatarRequest{}
	var releaseStatus ReleaseStatus = RELEASESTATUS_PUBLIC
	this.ReleaseStatus = &releaseStatus
	var version float32 = 1
	this.Version = &version
	return &this
}

// GetAssetUrl returns the AssetUrl field value if set, zero value otherwise.
func (o *CreateAvatarRequest) GetAssetUrl() string {
	if o == nil || isNil(o.AssetUrl) {
		var ret string
		return ret
	}
	return *o.AssetUrl
}

// GetAssetUrlOk returns a tuple with the AssetUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAvatarRequest) GetAssetUrlOk() (*string, bool) {
	if o == nil || isNil(o.AssetUrl) {
    return nil, false
	}
	return o.AssetUrl, true
}

// HasAssetUrl returns a boolean if a field has been set.
func (o *CreateAvatarRequest) HasAssetUrl() bool {
	if o != nil && !isNil(o.AssetUrl) {
		return true
	}

	return false
}

// SetAssetUrl gets a reference to the given string and assigns it to the AssetUrl field.
func (o *CreateAvatarRequest) SetAssetUrl(v string) {
	o.AssetUrl = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateAvatarRequest) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAvatarRequest) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateAvatarRequest) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateAvatarRequest) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *CreateAvatarRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateAvatarRequest) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateAvatarRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateAvatarRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAvatarRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateAvatarRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateAvatarRequest) SetDescription(v string) {
	o.Description = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CreateAvatarRequest) GetTags() []string {
	if o == nil || isNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAvatarRequest) GetTagsOk() ([]string, bool) {
	if o == nil || isNil(o.Tags) {
    return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreateAvatarRequest) HasTags() bool {
	if o != nil && !isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *CreateAvatarRequest) SetTags(v []string) {
	o.Tags = v
}

// GetImageUrl returns the ImageUrl field value
func (o *CreateAvatarRequest) GetImageUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value
// and a boolean to check if the value has been set.
func (o *CreateAvatarRequest) GetImageUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ImageUrl, true
}

// SetImageUrl sets field value
func (o *CreateAvatarRequest) SetImageUrl(v string) {
	o.ImageUrl = v
}

// GetReleaseStatus returns the ReleaseStatus field value if set, zero value otherwise.
func (o *CreateAvatarRequest) GetReleaseStatus() ReleaseStatus {
	if o == nil || isNil(o.ReleaseStatus) {
		var ret ReleaseStatus
		return ret
	}
	return *o.ReleaseStatus
}

// GetReleaseStatusOk returns a tuple with the ReleaseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAvatarRequest) GetReleaseStatusOk() (*ReleaseStatus, bool) {
	if o == nil || isNil(o.ReleaseStatus) {
    return nil, false
	}
	return o.ReleaseStatus, true
}

// HasReleaseStatus returns a boolean if a field has been set.
func (o *CreateAvatarRequest) HasReleaseStatus() bool {
	if o != nil && !isNil(o.ReleaseStatus) {
		return true
	}

	return false
}

// SetReleaseStatus gets a reference to the given ReleaseStatus and assigns it to the ReleaseStatus field.
func (o *CreateAvatarRequest) SetReleaseStatus(v ReleaseStatus) {
	o.ReleaseStatus = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CreateAvatarRequest) GetVersion() float32 {
	if o == nil || isNil(o.Version) {
		var ret float32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAvatarRequest) GetVersionOk() (*float32, bool) {
	if o == nil || isNil(o.Version) {
    return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CreateAvatarRequest) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given float32 and assigns it to the Version field.
func (o *CreateAvatarRequest) SetVersion(v float32) {
	o.Version = &v
}

// GetUnityPackageUrl returns the UnityPackageUrl field value if set, zero value otherwise.
func (o *CreateAvatarRequest) GetUnityPackageUrl() string {
	if o == nil || isNil(o.UnityPackageUrl) {
		var ret string
		return ret
	}
	return *o.UnityPackageUrl
}

// GetUnityPackageUrlOk returns a tuple with the UnityPackageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAvatarRequest) GetUnityPackageUrlOk() (*string, bool) {
	if o == nil || isNil(o.UnityPackageUrl) {
    return nil, false
	}
	return o.UnityPackageUrl, true
}

// HasUnityPackageUrl returns a boolean if a field has been set.
func (o *CreateAvatarRequest) HasUnityPackageUrl() bool {
	if o != nil && !isNil(o.UnityPackageUrl) {
		return true
	}

	return false
}

// SetUnityPackageUrl gets a reference to the given string and assigns it to the UnityPackageUrl field.
func (o *CreateAvatarRequest) SetUnityPackageUrl(v string) {
	o.UnityPackageUrl = &v
}

func (o CreateAvatarRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AssetUrl) {
		toSerialize["assetUrl"] = o.AssetUrl
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if true {
		toSerialize["imageUrl"] = o.ImageUrl
	}
	if !isNil(o.ReleaseStatus) {
		toSerialize["releaseStatus"] = o.ReleaseStatus
	}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !isNil(o.UnityPackageUrl) {
		toSerialize["unityPackageUrl"] = o.UnityPackageUrl
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAvatarRequest struct {
	value *CreateAvatarRequest
	isSet bool
}

func (v NullableCreateAvatarRequest) Get() *CreateAvatarRequest {
	return v.value
}

func (v *NullableCreateAvatarRequest) Set(val *CreateAvatarRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAvatarRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAvatarRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAvatarRequest(val *CreateAvatarRequest) *NullableCreateAvatarRequest {
	return &NullableCreateAvatarRequest{value: val, isSet: true}
}

func (v NullableCreateAvatarRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAvatarRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


