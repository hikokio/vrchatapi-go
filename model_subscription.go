/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
)

// Subscription 
type Subscription struct {
	Id string `json:"id"`
	SteamItemId string `json:"steamItemId"`
	Amount float32 `json:"amount"`
	Description string `json:"description"`
	Period SubscriptionPeriod `json:"period"`
	Tier float32 `json:"tier"`
}

// NewSubscription instantiates a new Subscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscription(id string, steamItemId string, amount float32, description string, period SubscriptionPeriod, tier float32) *Subscription {
	this := Subscription{}
	this.Id = id
	this.SteamItemId = steamItemId
	this.Amount = amount
	this.Description = description
	this.Period = period
	this.Tier = tier
	return &this
}

// NewSubscriptionWithDefaults instantiates a new Subscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionWithDefaults() *Subscription {
	this := Subscription{}
	var period SubscriptionPeriod = SUBSCRIPTIONPERIOD_MONTH
	this.Period = period
	return &this
}

// GetId returns the Id field value
func (o *Subscription) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Subscription) SetId(v string) {
	o.Id = v
}

// GetSteamItemId returns the SteamItemId field value
func (o *Subscription) GetSteamItemId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SteamItemId
}

// GetSteamItemIdOk returns a tuple with the SteamItemId field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetSteamItemIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SteamItemId, true
}

// SetSteamItemId sets field value
func (o *Subscription) SetSteamItemId(v string) {
	o.SteamItemId = v
}

// GetAmount returns the Amount field value
func (o *Subscription) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetAmountOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *Subscription) SetAmount(v float32) {
	o.Amount = v
}

// GetDescription returns the Description field value
func (o *Subscription) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Subscription) SetDescription(v string) {
	o.Description = v
}

// GetPeriod returns the Period field value
func (o *Subscription) GetPeriod() SubscriptionPeriod {
	if o == nil {
		var ret SubscriptionPeriod
		return ret
	}

	return o.Period
}

// GetPeriodOk returns a tuple with the Period field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetPeriodOk() (*SubscriptionPeriod, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Period, true
}

// SetPeriod sets field value
func (o *Subscription) SetPeriod(v SubscriptionPeriod) {
	o.Period = v
}

// GetTier returns the Tier field value
func (o *Subscription) GetTier() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Tier
}

// GetTierOk returns a tuple with the Tier field value
// and a boolean to check if the value has been set.
func (o *Subscription) GetTierOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Tier, true
}

// SetTier sets field value
func (o *Subscription) SetTier(v float32) {
	o.Tier = v
}

func (o Subscription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["steamItemId"] = o.SteamItemId
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["period"] = o.Period
	}
	if true {
		toSerialize["tier"] = o.Tier
	}
	return json.Marshal(toSerialize)
}

type NullableSubscription struct {
	value *Subscription
	isSet bool
}

func (v NullableSubscription) Get() *Subscription {
	return v.value
}

func (v *NullableSubscription) Set(val *Subscription) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscription(val *Subscription) *NullableSubscription {
	return &NullableSubscription{value: val, isSet: true}
}

func (v NullableSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


