/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
	"time"
)

// World 
type World struct {
	// A users unique ID, usually in the form of `usr_c1644b5b-3ca4-45b4-97c6-a2a0de70d469`. Legacy players can have old IDs in the form of `8JoV9XEdpo`. The ID can never be changed.
	AuthorId string `json:"authorId"`
	AuthorName string `json:"authorName"`
	Capacity int32 `json:"capacity"`
	CreatedAt time.Time `json:"created_at"`
	Description string `json:"description"`
	Favorites *int32 `json:"favorites,omitempty"`
	Featured bool `json:"featured"`
	Heat int32 `json:"heat"`
	// WorldID be \"offline\" on User profiles if you are not friends with that user.
	Id string `json:"id"`
	ImageUrl string `json:"imageUrl"`
	// Will always be an empty list when unauthenticated.
	Instances [][]interface{} `json:"instances,omitempty"`
	LabsPublicationDate string `json:"labsPublicationDate"`
	Name string `json:"name"`
	Namespace string `json:"namespace"`
	// Will always be `0` when unauthenticated.
	Occupants *int32 `json:"occupants,omitempty"`
	Organization string `json:"organization"`
	Popularity int32 `json:"popularity"`
	PreviewYoutubeId NullableString `json:"previewYoutubeId,omitempty"`
	// Will always be `0` when unauthenticated.
	PrivateOccupants *int32 `json:"privateOccupants,omitempty"`
	// Will always be `0` when unauthenticated.
	PublicOccupants *int32 `json:"publicOccupants,omitempty"`
	PublicationDate string `json:"publicationDate"`
	ReleaseStatus ReleaseStatus `json:"releaseStatus"`
	//  
	Tags []string `json:"tags"`
	ThumbnailImageUrl string `json:"thumbnailImageUrl"`
	// Empty if unauthenticated.
	UnityPackages []UnityPackage `json:"unityPackages"`
	UpdatedAt time.Time `json:"updated_at"`
	Version int32 `json:"version"`
	Visits int32 `json:"visits"`
}

// NewWorld instantiates a new World object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorld(authorId string, authorName string, capacity int32, createdAt time.Time, description string, featured bool, heat int32, id string, imageUrl string, labsPublicationDate string, name string, namespace string, organization string, popularity int32, publicationDate string, releaseStatus ReleaseStatus, tags []string, thumbnailImageUrl string, unityPackages []UnityPackage, updatedAt time.Time, version int32, visits int32) *World {
	this := World{}
	this.AuthorId = authorId
	this.AuthorName = authorName
	this.Capacity = capacity
	this.CreatedAt = createdAt
	this.Description = description
	var favorites int32 = 0
	this.Favorites = &favorites
	this.Featured = featured
	this.Heat = heat
	this.Id = id
	this.ImageUrl = imageUrl
	this.LabsPublicationDate = labsPublicationDate
	this.Name = name
	this.Namespace = namespace
	var occupants int32 = 0
	this.Occupants = &occupants
	this.Organization = organization
	this.Popularity = popularity
	var privateOccupants int32 = 0
	this.PrivateOccupants = &privateOccupants
	var publicOccupants int32 = 0
	this.PublicOccupants = &publicOccupants
	this.PublicationDate = publicationDate
	this.ReleaseStatus = releaseStatus
	this.Tags = tags
	this.ThumbnailImageUrl = thumbnailImageUrl
	this.UnityPackages = unityPackages
	this.UpdatedAt = updatedAt
	this.Version = version
	this.Visits = visits
	return &this
}

// NewWorldWithDefaults instantiates a new World object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorldWithDefaults() *World {
	this := World{}
	var favorites int32 = 0
	this.Favorites = &favorites
	var featured bool = false
	this.Featured = featured
	var heat int32 = 0
	this.Heat = heat
	var occupants int32 = 0
	this.Occupants = &occupants
	var organization string = "vrchat"
	this.Organization = organization
	var popularity int32 = 0
	this.Popularity = popularity
	var privateOccupants int32 = 0
	this.PrivateOccupants = &privateOccupants
	var publicOccupants int32 = 0
	this.PublicOccupants = &publicOccupants
	var releaseStatus ReleaseStatus = RELEASESTATUS_PUBLIC
	this.ReleaseStatus = releaseStatus
	var version int32 = 0
	this.Version = version
	var visits int32 = 0
	this.Visits = visits
	return &this
}

// GetAuthorId returns the AuthorId field value
func (o *World) GetAuthorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value
// and a boolean to check if the value has been set.
func (o *World) GetAuthorIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AuthorId, true
}

// SetAuthorId sets field value
func (o *World) SetAuthorId(v string) {
	o.AuthorId = v
}

// GetAuthorName returns the AuthorName field value
func (o *World) GetAuthorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthorName
}

// GetAuthorNameOk returns a tuple with the AuthorName field value
// and a boolean to check if the value has been set.
func (o *World) GetAuthorNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AuthorName, true
}

// SetAuthorName sets field value
func (o *World) SetAuthorName(v string) {
	o.AuthorName = v
}

// GetCapacity returns the Capacity field value
func (o *World) GetCapacity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Capacity
}

// GetCapacityOk returns a tuple with the Capacity field value
// and a boolean to check if the value has been set.
func (o *World) GetCapacityOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Capacity, true
}

// SetCapacity sets field value
func (o *World) SetCapacity(v int32) {
	o.Capacity = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *World) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *World) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *World) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDescription returns the Description field value
func (o *World) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *World) GetDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *World) SetDescription(v string) {
	o.Description = v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *World) GetFavorites() int32 {
	if o == nil || isNil(o.Favorites) {
		var ret int32
		return ret
	}
	return *o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *World) GetFavoritesOk() (*int32, bool) {
	if o == nil || isNil(o.Favorites) {
    return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *World) HasFavorites() bool {
	if o != nil && !isNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given int32 and assigns it to the Favorites field.
func (o *World) SetFavorites(v int32) {
	o.Favorites = &v
}

// GetFeatured returns the Featured field value
func (o *World) GetFeatured() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Featured
}

// GetFeaturedOk returns a tuple with the Featured field value
// and a boolean to check if the value has been set.
func (o *World) GetFeaturedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Featured, true
}

// SetFeatured sets field value
func (o *World) SetFeatured(v bool) {
	o.Featured = v
}

// GetHeat returns the Heat field value
func (o *World) GetHeat() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Heat
}

// GetHeatOk returns a tuple with the Heat field value
// and a boolean to check if the value has been set.
func (o *World) GetHeatOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Heat, true
}

// SetHeat sets field value
func (o *World) SetHeat(v int32) {
	o.Heat = v
}

// GetId returns the Id field value
func (o *World) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *World) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *World) SetId(v string) {
	o.Id = v
}

// GetImageUrl returns the ImageUrl field value
func (o *World) GetImageUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value
// and a boolean to check if the value has been set.
func (o *World) GetImageUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ImageUrl, true
}

// SetImageUrl sets field value
func (o *World) SetImageUrl(v string) {
	o.ImageUrl = v
}

// GetInstances returns the Instances field value if set, zero value otherwise.
func (o *World) GetInstances() [][]interface{} {
	if o == nil || isNil(o.Instances) {
		var ret [][]interface{}
		return ret
	}
	return o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *World) GetInstancesOk() ([][]interface{}, bool) {
	if o == nil || isNil(o.Instances) {
    return nil, false
	}
	return o.Instances, true
}

// HasInstances returns a boolean if a field has been set.
func (o *World) HasInstances() bool {
	if o != nil && !isNil(o.Instances) {
		return true
	}

	return false
}

// SetInstances gets a reference to the given [][]interface{} and assigns it to the Instances field.
func (o *World) SetInstances(v [][]interface{}) {
	o.Instances = v
}

// GetLabsPublicationDate returns the LabsPublicationDate field value
func (o *World) GetLabsPublicationDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LabsPublicationDate
}

// GetLabsPublicationDateOk returns a tuple with the LabsPublicationDate field value
// and a boolean to check if the value has been set.
func (o *World) GetLabsPublicationDateOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LabsPublicationDate, true
}

// SetLabsPublicationDate sets field value
func (o *World) SetLabsPublicationDate(v string) {
	o.LabsPublicationDate = v
}

// GetName returns the Name field value
func (o *World) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *World) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *World) SetName(v string) {
	o.Name = v
}

// GetNamespace returns the Namespace field value
func (o *World) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *World) GetNamespaceOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *World) SetNamespace(v string) {
	o.Namespace = v
}

// GetOccupants returns the Occupants field value if set, zero value otherwise.
func (o *World) GetOccupants() int32 {
	if o == nil || isNil(o.Occupants) {
		var ret int32
		return ret
	}
	return *o.Occupants
}

// GetOccupantsOk returns a tuple with the Occupants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *World) GetOccupantsOk() (*int32, bool) {
	if o == nil || isNil(o.Occupants) {
    return nil, false
	}
	return o.Occupants, true
}

// HasOccupants returns a boolean if a field has been set.
func (o *World) HasOccupants() bool {
	if o != nil && !isNil(o.Occupants) {
		return true
	}

	return false
}

// SetOccupants gets a reference to the given int32 and assigns it to the Occupants field.
func (o *World) SetOccupants(v int32) {
	o.Occupants = &v
}

// GetOrganization returns the Organization field value
func (o *World) GetOrganization() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *World) GetOrganizationOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *World) SetOrganization(v string) {
	o.Organization = v
}

// GetPopularity returns the Popularity field value
func (o *World) GetPopularity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Popularity
}

// GetPopularityOk returns a tuple with the Popularity field value
// and a boolean to check if the value has been set.
func (o *World) GetPopularityOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Popularity, true
}

// SetPopularity sets field value
func (o *World) SetPopularity(v int32) {
	o.Popularity = v
}

// GetPreviewYoutubeId returns the PreviewYoutubeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *World) GetPreviewYoutubeId() string {
	if o == nil || isNil(o.PreviewYoutubeId.Get()) {
		var ret string
		return ret
	}
	return *o.PreviewYoutubeId.Get()
}

// GetPreviewYoutubeIdOk returns a tuple with the PreviewYoutubeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *World) GetPreviewYoutubeIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.PreviewYoutubeId.Get(), o.PreviewYoutubeId.IsSet()
}

// HasPreviewYoutubeId returns a boolean if a field has been set.
func (o *World) HasPreviewYoutubeId() bool {
	if o != nil && o.PreviewYoutubeId.IsSet() {
		return true
	}

	return false
}

// SetPreviewYoutubeId gets a reference to the given NullableString and assigns it to the PreviewYoutubeId field.
func (o *World) SetPreviewYoutubeId(v string) {
	o.PreviewYoutubeId.Set(&v)
}
// SetPreviewYoutubeIdNil sets the value for PreviewYoutubeId to be an explicit nil
func (o *World) SetPreviewYoutubeIdNil() {
	o.PreviewYoutubeId.Set(nil)
}

// UnsetPreviewYoutubeId ensures that no value is present for PreviewYoutubeId, not even an explicit nil
func (o *World) UnsetPreviewYoutubeId() {
	o.PreviewYoutubeId.Unset()
}

// GetPrivateOccupants returns the PrivateOccupants field value if set, zero value otherwise.
func (o *World) GetPrivateOccupants() int32 {
	if o == nil || isNil(o.PrivateOccupants) {
		var ret int32
		return ret
	}
	return *o.PrivateOccupants
}

// GetPrivateOccupantsOk returns a tuple with the PrivateOccupants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *World) GetPrivateOccupantsOk() (*int32, bool) {
	if o == nil || isNil(o.PrivateOccupants) {
    return nil, false
	}
	return o.PrivateOccupants, true
}

// HasPrivateOccupants returns a boolean if a field has been set.
func (o *World) HasPrivateOccupants() bool {
	if o != nil && !isNil(o.PrivateOccupants) {
		return true
	}

	return false
}

// SetPrivateOccupants gets a reference to the given int32 and assigns it to the PrivateOccupants field.
func (o *World) SetPrivateOccupants(v int32) {
	o.PrivateOccupants = &v
}

// GetPublicOccupants returns the PublicOccupants field value if set, zero value otherwise.
func (o *World) GetPublicOccupants() int32 {
	if o == nil || isNil(o.PublicOccupants) {
		var ret int32
		return ret
	}
	return *o.PublicOccupants
}

// GetPublicOccupantsOk returns a tuple with the PublicOccupants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *World) GetPublicOccupantsOk() (*int32, bool) {
	if o == nil || isNil(o.PublicOccupants) {
    return nil, false
	}
	return o.PublicOccupants, true
}

// HasPublicOccupants returns a boolean if a field has been set.
func (o *World) HasPublicOccupants() bool {
	if o != nil && !isNil(o.PublicOccupants) {
		return true
	}

	return false
}

// SetPublicOccupants gets a reference to the given int32 and assigns it to the PublicOccupants field.
func (o *World) SetPublicOccupants(v int32) {
	o.PublicOccupants = &v
}

// GetPublicationDate returns the PublicationDate field value
func (o *World) GetPublicationDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicationDate
}

// GetPublicationDateOk returns a tuple with the PublicationDate field value
// and a boolean to check if the value has been set.
func (o *World) GetPublicationDateOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PublicationDate, true
}

// SetPublicationDate sets field value
func (o *World) SetPublicationDate(v string) {
	o.PublicationDate = v
}

// GetReleaseStatus returns the ReleaseStatus field value
func (o *World) GetReleaseStatus() ReleaseStatus {
	if o == nil {
		var ret ReleaseStatus
		return ret
	}

	return o.ReleaseStatus
}

// GetReleaseStatusOk returns a tuple with the ReleaseStatus field value
// and a boolean to check if the value has been set.
func (o *World) GetReleaseStatusOk() (*ReleaseStatus, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ReleaseStatus, true
}

// SetReleaseStatus sets field value
func (o *World) SetReleaseStatus(v ReleaseStatus) {
	o.ReleaseStatus = v
}

// GetTags returns the Tags field value
func (o *World) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *World) GetTagsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *World) SetTags(v []string) {
	o.Tags = v
}

// GetThumbnailImageUrl returns the ThumbnailImageUrl field value
func (o *World) GetThumbnailImageUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ThumbnailImageUrl
}

// GetThumbnailImageUrlOk returns a tuple with the ThumbnailImageUrl field value
// and a boolean to check if the value has been set.
func (o *World) GetThumbnailImageUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ThumbnailImageUrl, true
}

// SetThumbnailImageUrl sets field value
func (o *World) SetThumbnailImageUrl(v string) {
	o.ThumbnailImageUrl = v
}

// GetUnityPackages returns the UnityPackages field value
func (o *World) GetUnityPackages() []UnityPackage {
	if o == nil {
		var ret []UnityPackage
		return ret
	}

	return o.UnityPackages
}

// GetUnityPackagesOk returns a tuple with the UnityPackages field value
// and a boolean to check if the value has been set.
func (o *World) GetUnityPackagesOk() ([]UnityPackage, bool) {
	if o == nil {
    return nil, false
	}
	return o.UnityPackages, true
}

// SetUnityPackages sets field value
func (o *World) SetUnityPackages(v []UnityPackage) {
	o.UnityPackages = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *World) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *World) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *World) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetVersion returns the Version field value
func (o *World) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *World) GetVersionOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *World) SetVersion(v int32) {
	o.Version = v
}

// GetVisits returns the Visits field value
func (o *World) GetVisits() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Visits
}

// GetVisitsOk returns a tuple with the Visits field value
// and a boolean to check if the value has been set.
func (o *World) GetVisitsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Visits, true
}

// SetVisits sets field value
func (o *World) SetVisits(v int32) {
	o.Visits = v
}

func (o World) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["authorId"] = o.AuthorId
	}
	if true {
		toSerialize["authorName"] = o.AuthorName
	}
	if true {
		toSerialize["capacity"] = o.Capacity
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if true {
		toSerialize["featured"] = o.Featured
	}
	if true {
		toSerialize["heat"] = o.Heat
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["imageUrl"] = o.ImageUrl
	}
	if !isNil(o.Instances) {
		toSerialize["instances"] = o.Instances
	}
	if true {
		toSerialize["labsPublicationDate"] = o.LabsPublicationDate
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["namespace"] = o.Namespace
	}
	if !isNil(o.Occupants) {
		toSerialize["occupants"] = o.Occupants
	}
	if true {
		toSerialize["organization"] = o.Organization
	}
	if true {
		toSerialize["popularity"] = o.Popularity
	}
	if o.PreviewYoutubeId.IsSet() {
		toSerialize["previewYoutubeId"] = o.PreviewYoutubeId.Get()
	}
	if !isNil(o.PrivateOccupants) {
		toSerialize["privateOccupants"] = o.PrivateOccupants
	}
	if !isNil(o.PublicOccupants) {
		toSerialize["publicOccupants"] = o.PublicOccupants
	}
	if true {
		toSerialize["publicationDate"] = o.PublicationDate
	}
	if true {
		toSerialize["releaseStatus"] = o.ReleaseStatus
	}
	if true {
		toSerialize["tags"] = o.Tags
	}
	if true {
		toSerialize["thumbnailImageUrl"] = o.ThumbnailImageUrl
	}
	if true {
		toSerialize["unityPackages"] = o.UnityPackages
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["visits"] = o.Visits
	}
	return json.Marshal(toSerialize)
}

type NullableWorld struct {
	value *World
	isSet bool
}

func (v NullableWorld) Get() *World {
	return v.value
}

func (v *NullableWorld) Set(val *World) {
	v.value = val
	v.isSet = true
}

func (v NullableWorld) IsSet() bool {
	return v.isSet
}

func (v *NullableWorld) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorld(val *World) *NullableWorld {
	return &NullableWorld{value: val, isSet: true}
}

func (v NullableWorld) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorld) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


