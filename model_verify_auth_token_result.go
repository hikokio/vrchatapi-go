/*
VRChat API Documentation


API version: 1.10.1
Contact: me@ariesclark.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vrchatapi

import (
	"encoding/json"
)

// VerifyAuthTokenResult struct for VerifyAuthTokenResult
type VerifyAuthTokenResult struct {
	Ok bool `json:"ok"`
	Token string `json:"token"`
}

// NewVerifyAuthTokenResult instantiates a new VerifyAuthTokenResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyAuthTokenResult(ok bool, token string) *VerifyAuthTokenResult {
	this := VerifyAuthTokenResult{}
	this.Ok = ok
	this.Token = token
	return &this
}

// NewVerifyAuthTokenResultWithDefaults instantiates a new VerifyAuthTokenResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyAuthTokenResultWithDefaults() *VerifyAuthTokenResult {
	this := VerifyAuthTokenResult{}
	return &this
}

// GetOk returns the Ok field value
func (o *VerifyAuthTokenResult) GetOk() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Ok
}

// GetOkOk returns a tuple with the Ok field value
// and a boolean to check if the value has been set.
func (o *VerifyAuthTokenResult) GetOkOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ok, true
}

// SetOk sets field value
func (o *VerifyAuthTokenResult) SetOk(v bool) {
	o.Ok = v
}

// GetToken returns the Token field value
func (o *VerifyAuthTokenResult) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *VerifyAuthTokenResult) GetTokenOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *VerifyAuthTokenResult) SetToken(v string) {
	o.Token = v
}

func (o VerifyAuthTokenResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ok"] = o.Ok
	}
	if true {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableVerifyAuthTokenResult struct {
	value *VerifyAuthTokenResult
	isSet bool
}

func (v NullableVerifyAuthTokenResult) Get() *VerifyAuthTokenResult {
	return v.value
}

func (v *NullableVerifyAuthTokenResult) Set(val *VerifyAuthTokenResult) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyAuthTokenResult) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyAuthTokenResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyAuthTokenResult(val *VerifyAuthTokenResult) *NullableVerifyAuthTokenResult {
	return &NullableVerifyAuthTokenResult{value: val, isSet: true}
}

func (v NullableVerifyAuthTokenResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyAuthTokenResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


